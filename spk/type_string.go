// generated by stringer -type=Type; DO NOT EDIT

package spk

import "fmt"

const (
	_Type_name_0 = "ModDiffArraysChebyshevPosOnlyChebyshev"
	_Type_name_1 = "Discrete"
	_Type_name_2 = "LagrangeEqLagrangeUneqSpaceCommTwoLine"
	_Type_name_3 = "HermiteUniformHermiteNonUniformChebyshevNonUniformConicProp"
	_Type_name_4 = "EquinoctialElements"
	_Type_name_5 = "CebyshevVelOnlyExtModDiffArrays"
)

var (
	_Type_index_0 = [...]uint8{0, 13, 29, 38}
	_Type_index_1 = [...]uint8{0, 8}
	_Type_index_2 = [...]uint8{0, 10, 22, 38}
	_Type_index_3 = [...]uint8{0, 14, 31, 50, 59}
	_Type_index_4 = [...]uint8{0, 19}
	_Type_index_5 = [...]uint8{0, 15, 31}
)

func (i Type) String() string {
	switch {
	case 1 <= i && i <= 3:
		i -= 1
		return _Type_name_0[_Type_index_0[i]:_Type_index_0[i+1]]
	case i == 5:
		return _Type_name_1
	case 8 <= i && i <= 10:
		i -= 8
		return _Type_name_2[_Type_index_2[i]:_Type_index_2[i+1]]
	case 12 <= i && i <= 15:
		i -= 12
		return _Type_name_3[_Type_index_3[i]:_Type_index_3[i+1]]
	case i == 17:
		return _Type_name_4
	case 20 <= i && i <= 21:
		i -= 20
		return _Type_name_5[_Type_index_5[i]:_Type_index_5[i+1]]
	default:
		return fmt.Sprintf("Type(%d)", i)
	}
}
